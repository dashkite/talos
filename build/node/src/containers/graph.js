"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Graph = void 0;
var Meta = _interopRequireWildcard(require("@dashkite/joy/metaclass"));
var Type = _interopRequireWildcard(require("@dashkite/joy/type"));
var _generic = require("@dashkite/joy/generic");
var _vertex = require("./vertex.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var Graph, create;
create = (0, _generic.generic)({
  name: "graph create",
  default: function (...args) {
    throw new Error(`Graph.create: input is malformed ${JSON.stringify(args)}`);
  }
});
(0, _generic.generic)(create, Type.isObject, function (graph) {
  var i, len, ref, state, vertex;
  ref = Reflect.ownKeys(graph);
  for (i = 0, len = ref.length; i < len; i++) {
    state = ref[i];
    vertex = graph[state];
    graph[state] = _vertex.Vertex.create(state, vertex);
  }
  return new Graph({
    graph
  });
});
exports.Graph = Graph = function () {
  class Graph {
    constructor({
      graph: graph1
    }) {
      this.graph = graph1;
    }
    get(talos) {
      return this.graph[talos.state];
    }
    has(talos) {
      return this.graph[talos.state] != null;
    }
  }
  ;
  Meta.mixin(Graph.prototype, [Meta.getters({})]);
  Graph.create = create;
  Graph.isType = Type.isType(Graph);
  return Graph;
}.call(void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb250YWluZXJzL2dyYXBoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBLElBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUE7QUFDQSxJQUFBLElBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUE7QUFDQSxJQUFBLFFBQUEsR0FBQSxPQUFBO0FBQUEsSUFBQSxPQUFBLEdBQUEsT0FBQTtBQUFBLFNBQUEseUJBQUEsQ0FBQSw2QkFBQSxPQUFBLG1CQUFBLENBQUEsT0FBQSxPQUFBLElBQUEsQ0FBQSxPQUFBLE9BQUEsWUFBQSx3QkFBQSxZQUFBLENBQUEsQ0FBQSxXQUFBLENBQUEsR0FBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBLENBQUE7QUFBQSxTQUFBLHdCQUFBLENBQUEsRUFBQSxDQUFBLFNBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsVUFBQSxTQUFBLENBQUEsZUFBQSxDQUFBLHVCQUFBLENBQUEseUJBQUEsQ0FBQSxXQUFBLE9BQUEsRUFBQSxDQUFBLFFBQUEsQ0FBQSxHQUFBLHdCQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBLEtBQUEsU0FBQSxVQUFBLENBQUEsR0FBQSxNQUFBLENBQUEsY0FBQSxJQUFBLE1BQUEsQ0FBQSx3QkFBQSxXQUFBLENBQUEsSUFBQSxDQUFBLG9CQUFBLENBQUEsSUFBQSxNQUFBLENBQUEsU0FBQSxDQUFBLGNBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsU0FBQSxDQUFBLEdBQUEsQ0FBQSxHQUFBLE1BQUEsQ0FBQSx3QkFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQSxHQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQSxNQUFBLENBQUEsY0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsT0FBQSxHQUFBLENBQUEsRUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBLENBQUE7QUFGQSxJQUFBLEtBQUEsRUFBQSxNQUFBO0FBTUEsTUFBQSxHQUFTLElBQUEsZ0JBQUEsRUFDUDtFQUFBLElBQUEsRUFBTSxjQUFOO0VBQ0EsT0FBQSxFQUFTLFNBQUEsQ0FBQSxHQUFFLElBQUYsRUFBQTtJQUNQLE1BQU0sSUFBSSxLQUFKLENBQVUsb0NBQW9DLElBQUksQ0FBQyxTQUFMLENBQWUsSUFBbkQsQ0FBQSxFQUFWLENBQUE7RUFEQztBQURULENBRE8sQ0FBQTtBQUtULElBQUEsZ0JBQUEsRUFBUSxNQUFSLEVBQWdCLElBQUksQ0FBQyxRQUFyQixFQUErQixVQUFFLEtBQUYsRUFBQTtFQUMvQixJQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLEtBQUEsRUFBQSxNQUFBO0VBQUUsR0FBQSxHQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsS0FBQSxDQUFBO0VBQUEsS0FBQSxDQUFBLEdBQUEsQ0FBQSxFQUFBLEdBQUEsR0FBQSxHQUFBLENBQUEsTUFBQSxFQUFBLENBQUEsR0FBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLEVBQUE7O0lBQ0UsTUFBQSxHQUFTLEtBQUssQ0FBRSxLQUFGLENBQUE7SUFDZCxLQUFLLENBQUUsS0FBRixDQUFMLEdBQWlCLGNBQU0sQ0FBQyxNQUFQLENBQWMsS0FBZCxFQUFxQixNQUFyQixDQUFBO0VBRm5CO1NBSUEsSUFBSSxLQUFKLENBQVU7SUFBRTtFQUFGLENBQVYsQ0FBQTtBQUw2QixDQUEvQixDQUFBO0FBUU0sT0FBQSxDQUFBLEtBQUEsR0FBQSxLQUFBLEdBQUEsWUFBQTtFQUFOLE1BQUEsS0FBQSxDQUFBO0lBQ0UsV0FBYSxDQUFDO01BQUcsS0FBQSxFQUFBO0lBQUgsQ0FBRCxFQUFBO01BQUcsSUFBQyxDQUFBLEtBQUEsR0FBQSxNQUFBO0lBQUo7SUFTYixHQUFLLENBQUUsS0FBRixFQUFBO2FBQ0gsSUFBQyxDQUFBLEtBQUssQ0FBRSxLQUFLLENBQUMsS0FBUixDQUFBO0lBREg7SUFHTCxHQUFLLENBQUUsS0FBRixFQUFBO2FBQ0gsSUFBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQSxDQUFBLElBQUEsSUFBQTtJQURHO0VBYlA7RUFBQTtFQUdFLElBQUksQ0FBQyxLQUFMLENBQVcsS0FBQyxDQUFBLFNBQVosRUFBZ0IsQ0FDZCxJQUFJLENBQUMsT0FBTCxDQUFhLENBQUEsQ0FBYixDQURjLENBQWhCLENBQUE7RUFJQSxLQUFDLENBQUEsTUFBRCxHQUFTLE1BQUE7RUFDVCxLQUFDLENBQUEsTUFBRCxHQUFTLElBQUksQ0FBQyxNQUFMLENBQVksS0FBWixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgTWV0YSBmcm9tIFwiQGRhc2hraXRlL2pveS9tZXRhY2xhc3NcIlxuaW1wb3J0ICogYXMgVHlwZSBmcm9tIFwiQGRhc2hraXRlL2pveS90eXBlXCJcbmltcG9ydCB7IGdlbmVyaWMgfSBmcm9tIFwiQGRhc2hraXRlL2pveS9nZW5lcmljXCJcbmltcG9ydCB7IFZlcnRleCB9IGZyb20gXCIuL3ZlcnRleFwiXG5cblxuY3JlYXRlID0gZ2VuZXJpYyBcbiAgbmFtZTogXCJncmFwaCBjcmVhdGVcIlxuICBkZWZhdWx0OiAoIGFyZ3MuLi4gKSAtPiBcbiAgICB0aHJvdyBuZXcgRXJyb3IgXCJHcmFwaC5jcmVhdGU6IGlucHV0IGlzIG1hbGZvcm1lZCAje0pTT04uc3RyaW5naWZ5IGFyZ3N9XCJcblxuZ2VuZXJpYyBjcmVhdGUsIFR5cGUuaXNPYmplY3QsICggZ3JhcGggKSAtPlxuICBmb3Igc3RhdGUgaW4gUmVmbGVjdC5vd25LZXlzIGdyYXBoXG4gICAgdmVydGV4ID0gZ3JhcGhbIHN0YXRlIF1cbiAgICBncmFwaFsgc3RhdGUgXSA9IFZlcnRleC5jcmVhdGUgc3RhdGUsIHZlcnRleFxuXG4gIG5ldyBHcmFwaCB7IGdyYXBoIH1cblxuXG5jbGFzcyBHcmFwaFxuICBjb25zdHJ1Y3RvcjogKHsgQGdyYXBoIH0pIC0+XG5cbiAgTWV0YS5taXhpbiBAOjosIFtcbiAgICBNZXRhLmdldHRlcnMge31cbiAgXVxuXG4gIEBjcmVhdGU6IGNyZWF0ZVxuICBAaXNUeXBlOiBUeXBlLmlzVHlwZSBAXG5cbiAgZ2V0OiAoIHRhbG9zICkgLT5cbiAgICBAZ3JhcGhbIHRhbG9zLnN0YXRlIF1cblxuICBoYXM6ICggdGFsb3MgKSAtPlxuICAgIEBncmFwaFsgdGFsb3Muc3RhdGUgXT9cblxuXG5leHBvcnQge1xuICBHcmFwaFxufSJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=src/containers/graph.coffee