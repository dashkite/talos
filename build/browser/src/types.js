var isIteratorKind, isMachine;
import * as Type from "@dashkite/joy/type";
// These async functions can consume sync iterators, so long as we let async
// behavior take over downstream.
isIteratorKind = function(x) {
    return x[Symbol.asyncIterator] != null || x[Symbol.iterator] != null;
};
// TODO: Rely on errors from machine expansion for now, but this is starting to
// look like an externally useful type.
isMachine = function(x) {
    return Type.isObject(x) || Type.isArray(x);
};
export { isIteratorKind, isMachine }; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic3JjL3R5cGVzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGNBQUEsRUFBQTs7QUFBQSxPQUFPLENBQUEsUUFBUCxNQUFBLHFCQUFBOzs7O0FBSUEsY0FBQSxHQUFpQixRQUFBLENBQUUsQ0FBRixDQUFBO1NBQVMsaUNBQUEsSUFBOEI7QUFBdkMsRUFKakI7Ozs7QUFRQSxTQUFBLEdBQVksUUFBQSxDQUFFLENBQUYsQ0FBQTtTQUFTLENBQUUsSUFBSSxDQUFDLFFBQUwsQ0FBYyxDQUFkLENBQUYsQ0FBQSxJQUF1QixDQUFFLElBQUksQ0FBQyxPQUFMLENBQWEsQ0FBYixDQUFGO0FBQWhDOztBQUdaLE9BQUE7RUFDRSxjQURGO0VBRUUsU0FGRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFR5cGUgZnJvbSBcIkBkYXNoa2l0ZS9qb3kvdHlwZVwiXG5cbiMgVGhlc2UgYXN5bmMgZnVuY3Rpb25zIGNhbiBjb25zdW1lIHN5bmMgaXRlcmF0b3JzLCBzbyBsb25nIGFzIHdlIGxldCBhc3luY1xuIyBiZWhhdmlvciB0YWtlIG92ZXIgZG93bnN0cmVhbS5cbmlzSXRlcmF0b3JLaW5kID0gKCB4ICkgLT4geFsgU3ltYm9sLmFzeW5jSXRlcmF0b3IgXT8gfHwgeFsgU3ltYm9sLml0ZXJhdG9yIF0/XG5cbiMgVE9ETzogUmVseSBvbiBlcnJvcnMgZnJvbSBtYWNoaW5lIGV4cGFuc2lvbiBmb3Igbm93LCBidXQgdGhpcyBpcyBzdGFydGluZyB0b1xuIyBsb29rIGxpa2UgYW4gZXh0ZXJuYWxseSB1c2VmdWwgdHlwZS5cbmlzTWFjaGluZSA9ICggeCApIC0+ICggVHlwZS5pc09iamVjdCB4ICkgfHwgKCBUeXBlLmlzQXJyYXkgeCApXG5cblxuZXhwb3J0IHtcbiAgaXNJdGVyYXRvcktpbmRcbiAgaXNNYWNoaW5lXG59Il19
 //# sourceURL=src/types.coffee

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy90eXBlcy5jb2ZmZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVHlwZSBmcm9tIFwiQGRhc2hraXRlL2pveS90eXBlXCJcblxuIyBUaGVzZSBhc3luYyBmdW5jdGlvbnMgY2FuIGNvbnN1bWUgc3luYyBpdGVyYXRvcnMsIHNvIGxvbmcgYXMgd2UgbGV0IGFzeW5jXG4jIGJlaGF2aW9yIHRha2Ugb3ZlciBkb3duc3RyZWFtLlxuaXNJdGVyYXRvcktpbmQgPSAoIHggKSAtPiB4WyBTeW1ib2wuYXN5bmNJdGVyYXRvciBdPyB8fCB4WyBTeW1ib2wuaXRlcmF0b3IgXT9cblxuIyBUT0RPOiBSZWx5IG9uIGVycm9ycyBmcm9tIG1hY2hpbmUgZXhwYW5zaW9uIGZvciBub3csIGJ1dCB0aGlzIGlzIHN0YXJ0aW5nIHRvXG4jIGxvb2sgbGlrZSBhbiBleHRlcm5hbGx5IHVzZWZ1bCB0eXBlLlxuaXNNYWNoaW5lID0gKCB4ICkgLT4gKCBUeXBlLmlzT2JqZWN0IHggKSB8fCAoIFR5cGUuaXNBcnJheSB4IClcblxuXG5leHBvcnQge1xuICBpc0l0ZXJhdG9yS2luZFxuICBpc01hY2hpbmVcbn0iXSwibmFtZXMiOlsiaXNJdGVyYXRvcktpbmQiLCJpc01hY2hpbmUiLCJUeXBlIiwieCIsIlN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJpdGVyYXRvciIsImlzT2JqZWN0IiwiaXNBcnJheSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQUEsZ0JBQUFDO0FBQUEsWUFBT0MsVUFBUCxxQkFBQTs7O0FBSUFGLGlCQUFpQixTQUFFRyxDQUFGO1dBQVMsQUFBQUEsQ0FBQSxDQUFBQyxPQUFBQyxhQUFBLENBQUEsSUFBQSxRQUE4QkYsQ0FBQSxDQUFBQyxPQUFBRSxRQUFBLENBQUEsSUFBQTtBQUF2Qzs7O0FBSWpCTCxZQUFZLFNBQUVFLENBQUY7V0FBUyxBQUFFRCxLQUFLSyxRQUFMLENBQWNKLE1BQVNELEtBQUtNLE9BQUwsQ0FBYUw7QUFBL0M7QUFHWixTQUNFSCxjQURGLEVBRUVDLFNBRkYifQ==