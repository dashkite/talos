"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runSync = void 0;
var Fn = _interopRequireWildcard(require("@dashkite/joy/function"));
var Type = _interopRequireWildcard(require("@dashkite/joy/type"));
var _index = require("../containers/index.js");
var Error = _interopRequireWildcard(require("../containers/errors.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var runSync;
exports.runSync = runSync = Fn.curry(Fn.rtee(function (graph, talos) {
  var error, vertex;
  if (!_index.Graph.isType(graph)) {
    throw new Error("runSync: graph instance is invalid");
  }
  if (!_index.Talos.isType(talos)) {
    throw new Error("runSync: talos instance is invalid");
  }
  while (true) {
    if (talos.halted) {
      break;
    }
    vertex = graph.selectSync(talos);
    if (vertex == null) {
      talos.error = Error.UnknownState.create();
      talos.halt();
      continue;
    }
    if (vertex.action != null) {
      try {
        vertex.action(talos, vertex);
      } catch (error1) {
        error = error1;
        talos.error = Error.ActionError.create({
          error
        });
        talos.halt();
        continue;
      }
    }
    if (Type.isString(vertex.next)) {
      talos.state = vertex.next;
    } else if (Type.isSymbol(vertex.next)) {
      talos.state = vertex.next;
    } else if (Type.isFunction(vertex.next)) {
      try {
        talos.state = vertex.next(talos, vertex);
      } catch (error1) {
        error = error1;
        talos.error = Error.NextError.create({
          error
        });
        talos.halt();
        continue;
      }
    } else {
      talos.error = Error.UnknownNext.create({
        vertex
      });
      talos.halt();
      continue;
    }
  }
  return talos;
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mdW5jdGlvbnMvcnVuLXN5bmMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUEsRUFBQSxHQUFBLHVCQUFBLENBQUEsT0FBQTtBQUNBLElBQUEsSUFBQSxHQUFBLHVCQUFBLENBQUEsT0FBQTtBQUFBLElBQUEsTUFBQSxHQUFBLE9BQUE7QUFBQSxJQUFBLEtBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUE7QUFBQSxTQUFBLHlCQUFBLENBQUEsNkJBQUEsT0FBQSxtQkFBQSxDQUFBLE9BQUEsT0FBQSxJQUFBLENBQUEsT0FBQSxPQUFBLFlBQUEsd0JBQUEsWUFBQSxDQUFBLENBQUEsV0FBQSxDQUFBLEdBQUEsQ0FBQSxHQUFBLENBQUEsS0FBQSxDQUFBO0FBQUEsU0FBQSx3QkFBQSxDQUFBLEVBQUEsQ0FBQSxTQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLFVBQUEsU0FBQSxDQUFBLGVBQUEsQ0FBQSx1QkFBQSxDQUFBLHlCQUFBLENBQUEsV0FBQSxPQUFBLEVBQUEsQ0FBQSxRQUFBLENBQUEsR0FBQSx3QkFBQSxDQUFBLENBQUEsT0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxLQUFBLFNBQUEsVUFBQSxDQUFBLEdBQUEsTUFBQSxDQUFBLGNBQUEsSUFBQSxNQUFBLENBQUEsd0JBQUEsV0FBQSxDQUFBLElBQUEsQ0FBQSxvQkFBQSxDQUFBLElBQUEsTUFBQSxDQUFBLFNBQUEsQ0FBQSxjQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLFNBQUEsQ0FBQSxHQUFBLENBQUEsR0FBQSxNQUFBLENBQUEsd0JBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxVQUFBLENBQUEsS0FBQSxDQUFBLENBQUEsR0FBQSxJQUFBLENBQUEsQ0FBQSxHQUFBLElBQUEsTUFBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLE9BQUEsR0FBQSxDQUFBLEVBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsR0FBQSxDQUFBO0FBREEsSUFBQSxPQUFBO0FBTUEsT0FBQSxDQUFBLE9BQUEsR0FBQSxPQUFBLEdBQVUsRUFBRSxDQUFDLEtBQUgsQ0FBUyxFQUFFLENBQUMsSUFBSCxDQUFRLFVBQUUsS0FBRixFQUFTLEtBQVQsRUFBQTtFQUMzQixJQUFBLEtBQUEsRUFBQSxNQUFBO0VBQUUsSUFBRyxDQUFFLFlBQUssQ0FBQyxNQUFOLENBQWEsS0FBYixDQUFMLEVBQUE7SUFDRSxNQUFNLElBQUksS0FBSixDQUFVLG9DQUFWLENBRFI7O0VBR0EsSUFBRyxDQUFFLFlBQUssQ0FBQyxNQUFOLENBQWEsS0FBYixDQUFMLEVBQUE7SUFDRSxNQUFNLElBQUksS0FBSixDQUFVLG9DQUFWLENBRFI7O0VBSUEsT0FBQSxJQUFBLEVBQUE7SUFDRSxJQUFHLEtBQUssQ0FBQyxNQUFULEVBQUE7TUFBQTs7SUFHQSxNQUFBLEdBQVMsS0FBSyxDQUFDLFVBQU4sQ0FBaUIsS0FBakIsQ0FBQTtJQUNULElBQUksTUFBQSxJQUFBLElBQUosRUFBQTtNQUNFLEtBQUssQ0FBQyxLQUFOLEdBQWMsS0FBSyxDQUFDLFlBQVksQ0FBQyxNQUFuQixDQUFBLENBQUE7TUFDZCxLQUFLLENBQUMsSUFBTixDQUFBLENBQUE7TUFGRjs7SUFLQSxJQUFHLE1BQUEsQ0FBQSxNQUFBLElBQUEsSUFBSCxFQUFBO01BQ0UsSUFBQTtRQUNFLE1BQU0sQ0FBQyxNQUFQLENBQWMsS0FBZCxFQUFxQixNQUFyQixDQURGO09BRUEsQ0FBQSxPQUFBLE1BQUEsRUFBQTtRQUFNLEtBQUEsR0FBQSxNQUFBO1FBQ0osS0FBSyxDQUFDLEtBQU4sR0FBYyxLQUFLLENBQUMsV0FBVyxDQUFDLE1BQWxCLENBQXlCO1VBQUU7UUFBRixDQUF6QixDQUFBO1FBQ2QsS0FBSyxDQUFDLElBQU4sQ0FBQSxDQUFBO1FBRkY7TUFIRjs7SUFRQSxJQUFHLElBQUksQ0FBQyxRQUFMLENBQWMsTUFBTSxDQUFDLElBQXJCLENBQUgsRUFBQTtNQUNFLEtBQUssQ0FBQyxLQUFOLEdBQWMsTUFBTSxDQUFDLElBRHZCO0tBQUEsTUFFSyxJQUFHLElBQUksQ0FBQyxRQUFMLENBQWMsTUFBTSxDQUFDLElBQXJCLENBQUgsRUFBQTtNQUNILEtBQUssQ0FBQyxLQUFOLEdBQWMsTUFBTSxDQUFDLElBRGxCO0tBQUEsTUFFQSxJQUFHLElBQUksQ0FBQyxVQUFMLENBQWdCLE1BQU0sQ0FBQyxJQUF2QixDQUFILEVBQUE7TUFDSCxJQUFBO1FBQ0UsS0FBSyxDQUFDLEtBQU4sR0FBYyxNQUFNLENBQUMsSUFBUCxDQUFZLEtBQVosRUFBbUIsTUFBbkIsQ0FEaEI7T0FFQSxDQUFBLE9BQUEsTUFBQSxFQUFBO1FBQU0sS0FBQSxHQUFBLE1BQUE7UUFDSixLQUFLLENBQUMsS0FBTixHQUFjLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBaEIsQ0FBdUI7VUFBRTtRQUFGLENBQXZCLENBQUE7UUFDZCxLQUFLLENBQUMsSUFBTixDQUFBLENBQUE7UUFGRjtNQUhHO0tBQUEsTUFBQTtNQVFILEtBQUssQ0FBQyxLQUFOLEdBQWMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxNQUFsQixDQUF5QjtRQUFFO01BQUYsQ0FBekIsQ0FBQTtNQUNkLEtBQUssQ0FBQyxJQUFOLENBQUEsQ0FBQTtNQVRHOztFQXRCUDtTQW1DQSxLQUFBO0FBM0N5QixDQUFSLENBQVQsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEZuIGZyb20gXCJAZGFzaGtpdGUvam95L2Z1bmN0aW9uXCJcbmltcG9ydCAqIGFzIFR5cGUgZnJvbSBcIkBkYXNoa2l0ZS9qb3kvdHlwZVwiXG5pbXBvcnQgeyBHcmFwaCwgVmVydGV4LCBUYWxvcyB9IGZyb20gXCIuLi9jb250YWluZXJzXCJcbmltcG9ydCAqIGFzIEVycm9yIGZyb20gXCIuLi9jb250YWluZXJzL2Vycm9yc1wiXG5cblxucnVuU3luYyA9IEZuLmN1cnJ5IEZuLnJ0ZWUgKCBncmFwaCwgdGFsb3MgKSAtPlxuICBpZiAhIEdyYXBoLmlzVHlwZSBncmFwaFxuICAgIHRocm93IG5ldyBFcnJvciBcInJ1blN5bmM6IGdyYXBoIGluc3RhbmNlIGlzIGludmFsaWRcIlxuXG4gIGlmICEgVGFsb3MuaXNUeXBlIHRhbG9zXG4gICAgdGhyb3cgbmV3IEVycm9yIFwicnVuU3luYzogdGFsb3MgaW5zdGFuY2UgaXMgaW52YWxpZFwiXG5cblxuICBsb29wXG4gICAgaWYgdGFsb3MuaGFsdGVkXG4gICAgICBicmVha1xuXG4gICAgdmVydGV4ID0gZ3JhcGguc2VsZWN0U3luYyB0YWxvc1xuICAgIGlmICF2ZXJ0ZXg/XG4gICAgICB0YWxvcy5lcnJvciA9IEVycm9yLlVua25vd25TdGF0ZS5jcmVhdGUoKVxuICAgICAgdGFsb3MuaGFsdCgpXG4gICAgICBjb250aW51ZVxuICAgIFxuICAgIGlmIHZlcnRleC5hY3Rpb24/XG4gICAgICB0cnlcbiAgICAgICAgdmVydGV4LmFjdGlvbiB0YWxvcywgdmVydGV4XG4gICAgICBjYXRjaCBlcnJvclxuICAgICAgICB0YWxvcy5lcnJvciA9IEVycm9yLkFjdGlvbkVycm9yLmNyZWF0ZSB7IGVycm9yIH1cbiAgICAgICAgdGFsb3MuaGFsdCgpXG4gICAgICAgIGNvbnRpbnVlXG5cbiAgICBpZiBUeXBlLmlzU3RyaW5nIHZlcnRleC5uZXh0XG4gICAgICB0YWxvcy5zdGF0ZSA9IHZlcnRleC5uZXh0XG4gICAgZWxzZSBpZiBUeXBlLmlzU3ltYm9sIHZlcnRleC5uZXh0XG4gICAgICB0YWxvcy5zdGF0ZSA9IHZlcnRleC5uZXh0XG4gICAgZWxzZSBpZiBUeXBlLmlzRnVuY3Rpb24gdmVydGV4Lm5leHRcbiAgICAgIHRyeVxuICAgICAgICB0YWxvcy5zdGF0ZSA9IHZlcnRleC5uZXh0IHRhbG9zLCB2ZXJ0ZXhcbiAgICAgIGNhdGNoIGVycm9yXG4gICAgICAgIHRhbG9zLmVycm9yID0gRXJyb3IuTmV4dEVycm9yLmNyZWF0ZSB7IGVycm9yIH1cbiAgICAgICAgdGFsb3MuaGFsdCgpXG4gICAgICAgIGNvbnRpbnVlXG4gICAgZWxzZVxuICAgICAgdGFsb3MuZXJyb3IgPSBFcnJvci5Vbmtub3duTmV4dC5jcmVhdGUgeyB2ZXJ0ZXggfVxuICAgICAgdGFsb3MuaGFsdCgpXG4gICAgICBjb250aW51ZVxuXG5cbiAgdGFsb3NcblxuXG5leHBvcnQge1xuICBydW5TeW5jXG59Il0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=src/functions/run-sync.coffee