"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.accept = void 0;
var Type = _interopRequireWildcard(require("@dashkite/joy/type"));
var _generic = require("@dashkite/joy/generic");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var make;
exports.accept = make = (0, _generic.generic)({
  name: "make edge accept",
  default: function (...args) {
    throw new Error(`make edge accept input is malformed ${JSON.stringify(args)}`);
  }
});
(0, _generic.generic)(make, Type.isString, function (s) {
  return function (talos, transform) {
    return transform === s;
  };
});
(0, _generic.generic)(make, Type.isSymbol, function (s) {
  return function (talos, transform) {
    return transform === s;
  };
});
(0, _generic.generic)(make, Type.isNumber, function (n) {
  return function (talos, transform) {
    return transform === n;
  };
});
(0, _generic.generic)(make, Type.isBoolean, function (b) {
  return function () {
    return b;
  };
});
(0, _generic.generic)(make, Type.isRegExp, function (re) {
  return function (talos, transform) {
    return Type.isString(transform) && re.test(transform);
  };
});
(0, _generic.generic)(make, Type.isFunction, function (f) {
  return function (talos, ...transforms) {
    return f(talos, ...transforms);
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb250YWluZXJzL2VkZ2UvYWNjZXB0LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBLElBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUE7QUFDQSxJQUFBLFFBQUEsR0FBQSxPQUFBO0FBQUEsU0FBQSx5QkFBQSxDQUFBLDZCQUFBLE9BQUEsbUJBQUEsQ0FBQSxPQUFBLE9BQUEsSUFBQSxDQUFBLE9BQUEsT0FBQSxZQUFBLHdCQUFBLFlBQUEsQ0FBQSxDQUFBLFdBQUEsQ0FBQSxHQUFBLENBQUEsR0FBQSxDQUFBLEtBQUEsQ0FBQTtBQUFBLFNBQUEsd0JBQUEsQ0FBQSxFQUFBLENBQUEsU0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxVQUFBLFNBQUEsQ0FBQSxlQUFBLENBQUEsdUJBQUEsQ0FBQSx5QkFBQSxDQUFBLFdBQUEsT0FBQSxFQUFBLENBQUEsUUFBQSxDQUFBLEdBQUEsd0JBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsS0FBQSxTQUFBLFVBQUEsQ0FBQSxHQUFBLE1BQUEsQ0FBQSxjQUFBLElBQUEsTUFBQSxDQUFBLHdCQUFBLFdBQUEsQ0FBQSxJQUFBLENBQUEsb0JBQUEsQ0FBQSxJQUFBLE1BQUEsQ0FBQSxTQUFBLENBQUEsY0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxTQUFBLENBQUEsR0FBQSxDQUFBLEdBQUEsTUFBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsVUFBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxJQUFBLE1BQUEsQ0FBQSxjQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxPQUFBLEdBQUEsQ0FBQSxFQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEdBQUEsQ0FBQTtBQURBLElBQUEsSUFBQTtBQUlBLE9BQUEsQ0FBQSxNQUFBLEdBQUEsSUFBQSxHQUFPLElBQUEsZ0JBQUEsRUFDTDtFQUFBLElBQUEsRUFBTSxrQkFBTjtFQUNBLE9BQUEsRUFBUyxTQUFBLENBQUEsR0FBRSxJQUFGLEVBQUE7SUFDUCxNQUFNLElBQUksS0FBSixDQUFVLHVDQUF1QyxJQUFJLENBQUMsU0FBTCxDQUFlLElBQXRELENBQUEsRUFBVixDQUFBO0VBREM7QUFEVCxDQURLLENBQUE7QUFLUCxJQUFBLGdCQUFBLEVBQVEsSUFBUixFQUFjLElBQUksQ0FBQyxRQUFuQixFQUE2QixVQUFFLENBQUYsRUFBQTtTQUMzQixVQUFFLEtBQUYsRUFBUyxTQUFULEVBQUE7V0FBd0IsU0FBQSxLQUFhLENBQUE7RUFBckMsQ0FBQTtBQUQyQixDQUE3QixDQUFBO0FBR0EsSUFBQSxnQkFBQSxFQUFRLElBQVIsRUFBYyxJQUFJLENBQUMsUUFBbkIsRUFBNkIsVUFBRSxDQUFGLEVBQUE7U0FDM0IsVUFBRSxLQUFGLEVBQVMsU0FBVCxFQUFBO1dBQXdCLFNBQUEsS0FBYSxDQUFBO0VBQXJDLENBQUE7QUFEMkIsQ0FBN0IsQ0FBQTtBQUdBLElBQUEsZ0JBQUEsRUFBUSxJQUFSLEVBQWMsSUFBSSxDQUFDLFFBQW5CLEVBQTZCLFVBQUUsQ0FBRixFQUFBO1NBQzNCLFVBQUUsS0FBRixFQUFTLFNBQVQsRUFBQTtXQUF3QixTQUFBLEtBQWEsQ0FBQTtFQUFyQyxDQUFBO0FBRDJCLENBQTdCLENBQUE7QUFHQSxJQUFBLGdCQUFBLEVBQVEsSUFBUixFQUFjLElBQUksQ0FBQyxTQUFuQixFQUE4QixVQUFFLENBQUYsRUFBQTtTQUM1QixZQUFBO1dBQUcsQ0FBQTtFQUFILENBQUE7QUFENEIsQ0FBOUIsQ0FBQTtBQUdBLElBQUEsZ0JBQUEsRUFBUSxJQUFSLEVBQWMsSUFBSSxDQUFDLFFBQW5CLEVBQTZCLFVBQUUsRUFBRixFQUFBO1NBQzNCLFVBQUUsS0FBRixFQUFTLFNBQVQsRUFBQTtJQUNFLE9BQUUsSUFBSSxDQUFDLFFBQUwsQ0FBYyxTQUFkLENBQUYsSUFBaUMsRUFBRSxDQUFDLElBQUgsQ0FBUSxTQUFWLENBQUE7RUFEakMsQ0FBQTtBQUQyQixDQUE3QixDQUFBO0FBSUEsSUFBQSxnQkFBQSxFQUFRLElBQVIsRUFBYyxJQUFJLENBQUMsVUFBbkIsRUFBK0IsVUFBRSxDQUFGLEVBQUE7U0FDN0IsVUFBRSxLQUFGLEVBQUEsR0FBUyxVQUFULEVBQUE7V0FBNEIsQ0FBQSxDQUFFLEtBQUYsRUFBUyxHQUFBLFVBQVQsQ0FBQTtFQUE1QixDQUFBO0FBRDZCLENBQS9CLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUeXBlIGZyb20gXCJAZGFzaGtpdGUvam95L3R5cGVcIlxuaW1wb3J0IHsgZ2VuZXJpYyB9IGZyb20gXCJAZGFzaGtpdGUvam95L2dlbmVyaWNcIlxuXG5cbm1ha2UgPSBnZW5lcmljIFxuICBuYW1lOiBcIm1ha2UgZWRnZSBhY2NlcHRcIlxuICBkZWZhdWx0OiAoIGFyZ3MuLi4gKSAtPiBcbiAgICB0aHJvdyBuZXcgRXJyb3IgXCJtYWtlIGVkZ2UgYWNjZXB0IGlucHV0IGlzIG1hbGZvcm1lZCAje0pTT04uc3RyaW5naWZ5IGFyZ3N9XCJcblxuZ2VuZXJpYyBtYWtlLCBUeXBlLmlzU3RyaW5nLCAoIHMgKSAtPlxuICAoIHRhbG9zLCB0cmFuc2Zvcm0gKSAtPiB0cmFuc2Zvcm0gPT0gc1xuXG5nZW5lcmljIG1ha2UsIFR5cGUuaXNTeW1ib2wsICggcyApIC0+XG4gICggdGFsb3MsIHRyYW5zZm9ybSApIC0+IHRyYW5zZm9ybSA9PSBzXG5cbmdlbmVyaWMgbWFrZSwgVHlwZS5pc051bWJlciwgKCBuICkgLT5cbiAgKCB0YWxvcywgdHJhbnNmb3JtICkgLT4gdHJhbnNmb3JtID09IG5cblxuZ2VuZXJpYyBtYWtlLCBUeXBlLmlzQm9vbGVhbiwgKCBiICkgLT5cbiAgLT4gYlxuXG5nZW5lcmljIG1ha2UsIFR5cGUuaXNSZWdFeHAsICggcmUgKSAtPlxuICAoIHRhbG9zLCB0cmFuc2Zvcm0gKSAtPiBcbiAgICAoIFR5cGUuaXNTdHJpbmcgdHJhbnNmb3JtICkgJiYgKCByZS50ZXN0IHRyYW5zZm9ybSApXG5cbmdlbmVyaWMgbWFrZSwgVHlwZS5pc0Z1bmN0aW9uLCAoIGYgKSAtPlxuICAoIHRhbG9zLCB0cmFuc2Zvcm1zLi4uICkgLT4gZiB0YWxvcywgdHJhbnNmb3Jtcy4uLlxuXG5cblxuZXhwb3J0IHsgbWFrZSBhcyBhY2NlcHQgfSJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=src/containers/edge/accept.coffee