"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TalosError = exports.MissingTransition = exports.InvalidState = exports.FailedRun = exports.FailedMove = void 0;
var Meta = _interopRequireWildcard(require("@dashkite/joy/metaclass"));
var Type = _interopRequireWildcard(require("@dashkite/joy/type"));
var _generic = require("@dashkite/joy/generic");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var FailedMove, FailedRun, InvalidState, MissingTransition, TalosError, _make, isError;
isError = Type.isKind(Error);
_make = function (type) {
  var make;
  make = (0, _generic.generic)({
    name: "error make",
    default: function (...args) {
      throw new Error(`TalosError.make: input is malformed ${JSON.stringify(args)}`);
    }
  });
  (0, _generic.generic)(make, function () {
    return new type({
      message: "talos encountered an error"
    });
  });
  (0, _generic.generic)(make, Type.isString, function (message) {
    return new type({
      message
    });
  });
  (0, _generic.generic)(make, isError, Type.isString, function (error, message) {
    return new type({
      message,
      error
    });
  });
  return make;
};
exports.TalosError = TalosError = function () {
  class TalosError extends Error {
    constructor({
      message
    }) {
      super(message);
    }
  }
  ;
  TalosError.make = _make(TalosError);
  TalosError.isType = Type.isType(TalosError);
  TalosError.isKind = Type.isKind(TalosError);
  return TalosError;
}.call(void 0);
exports.InvalidState = InvalidState = function () {
  class InvalidState extends TalosError {
    constructor({
      message
    }) {
      super(message);
    }
  }
  ;
  InvalidState.make = _make(InvalidState);
  InvalidState.isType = Type.isType(InvalidState);
  return InvalidState;
}.call(void 0);
exports.MissingTransition = MissingTransition = function () {
  class MissingTransition extends TalosError {
    constructor({
      message
    }) {
      super(message);
    }
  }
  ;
  MissingTransition.make = _make(MissingTransition);
  MissingTransition.isType = Type.isType(MissingTransition);
  return MissingTransition;
}.call(void 0);
exports.FailedRun = FailedRun = function () {
  class FailedRun extends TalosError {
    constructor({
      error,
      message
    }) {
      super(message);
      this.error = error;
    }
  }
  ;
  FailedRun.make = _make(FailedRun);
  FailedRun.isType = Type.isType(FailedRun);
  return FailedRun;
}.call(void 0);
exports.FailedMove = FailedMove = function () {
  class FailedMove extends TalosError {
    constructor({
      error,
      message
    }) {
      super(message);
      this.error = error;
    }
  }
  ;
  FailedMove.make = _make(FailedMove);
  FailedMove.isType = Type.isType(FailedMove);
  return FailedMove;
}.call(void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb250YWluZXJzL2Vycm9ycy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQSxJQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBO0FBQ0EsSUFBQSxJQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBO0FBQ0EsSUFBQSxRQUFBLEdBQUEsT0FBQTtBQUFBLFNBQUEseUJBQUEsQ0FBQSw2QkFBQSxPQUFBLG1CQUFBLENBQUEsT0FBQSxPQUFBLElBQUEsQ0FBQSxPQUFBLE9BQUEsWUFBQSx3QkFBQSxZQUFBLENBQUEsQ0FBQSxXQUFBLENBQUEsR0FBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBLENBQUE7QUFBQSxTQUFBLHdCQUFBLENBQUEsRUFBQSxDQUFBLFNBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsVUFBQSxTQUFBLENBQUEsZUFBQSxDQUFBLHVCQUFBLENBQUEseUJBQUEsQ0FBQSxXQUFBLE9BQUEsRUFBQSxDQUFBLFFBQUEsQ0FBQSxHQUFBLHdCQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBLEtBQUEsU0FBQSxVQUFBLENBQUEsR0FBQSxNQUFBLENBQUEsY0FBQSxJQUFBLE1BQUEsQ0FBQSx3QkFBQSxXQUFBLENBQUEsSUFBQSxDQUFBLG9CQUFBLENBQUEsSUFBQSxNQUFBLENBQUEsU0FBQSxDQUFBLGNBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsU0FBQSxDQUFBLEdBQUEsQ0FBQSxHQUFBLE1BQUEsQ0FBQSx3QkFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQSxHQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQSxNQUFBLENBQUEsY0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLElB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QUNBLElBQUMsQ0FBQSxLQUFELEdBQVMsS0FBQTtJQUZFO0VBRGY7RUFBQTtFQUtFLFNBQUMsQ0FBQSxJQUFELEdBQU8sS0FBQSxDQUFNLFNBQU4sQ0FBQTtFQUNQLFNBQUMsQ0FBQSxNQUFELEdBQVMsSUFBSSxDQUFDLE1BQUwsQ0FBWSxTQUFaLENBQUE7OztBQUVMLE9BQUEsQ0FBQSxVQUFBLEdBQUEsVUFBQSxHQUFBLFlBQUE7RUFBTixNQUFBLFVBQUEsU0FBeUIsVUFBQSxDQUF6QjtJQUNFLFdBQWEsQ0FBQztNQUFFLEtBQUY7TUFBUztJQUFULENBQUQsRUFBQTtXQUNYLENBQU0sT0FBTixDQUFBO01BQ0EsSUFBQyxDQUFBLEtBQUQsR0FBUyxLQUFBO0lBRkU7RUFEZjtFQUFBO0VBS0UsVUFBQyxDQUFBLElBQUQsR0FBTyxLQUFBLENBQU0sVUFBTixDQUFBO0VBQ1AsVUFBQyxDQUFBLE1BQUQsR0FBUyxJQUFJLENBQUMsTUFBTCxDQUFZLFVBQVosQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIE1ldGEgZnJvbSBcIkBkYXNoa2l0ZS9qb3kvbWV0YWNsYXNzXCJcbmltcG9ydCAqIGFzIFR5cGUgZnJvbSBcIkBkYXNoa2l0ZS9qb3kvdHlwZVwiXG5pbXBvcnQgeyBnZW5lcmljIH0gZnJvbSBcIkBkYXNoa2l0ZS9qb3kvZ2VuZXJpY1wiXG5cbmlzRXJyb3IgPSBUeXBlLmlzS2luZCBFcnJvclxuXG5fbWFrZSA9ICggdHlwZSApIC0+XG4gIG1ha2UgPSBnZW5lcmljIFxuICAgIG5hbWU6IFwiZXJyb3IgbWFrZVwiXG4gICAgZGVmYXVsdDogKCBhcmdzLi4uICkgLT4gXG4gICAgICB0aHJvdyBuZXcgRXJyb3IgXCJUYWxvc0Vycm9yLm1ha2U6IGlucHV0IGlzIG1hbGZvcm1lZCAje0pTT04uc3RyaW5naWZ5IGFyZ3N9XCJcblxuICBnZW5lcmljIG1ha2UsIC0+XG4gICAgbmV3IHR5cGUgbWVzc2FnZTogXCJ0YWxvcyBlbmNvdW50ZXJlZCBhbiBlcnJvclwiXG5cbiAgZ2VuZXJpYyBtYWtlLCBUeXBlLmlzU3RyaW5nLCAoIG1lc3NhZ2UgKSAtPlxuICAgIG5ldyB0eXBlIHsgbWVzc2FnZSB9XG5cbiAgZ2VuZXJpYyBtYWtlLCBpc0Vycm9yLCBUeXBlLmlzU3RyaW5nLCAoIGVycm9yLCBtZXNzYWdlICkgLT5cbiAgICBuZXcgdHlwZSB7IG1lc3NhZ2UsIGVycm9yIH1cblxuICBtYWtlXG5cbmNsYXNzIFRhbG9zRXJyb3IgZXh0ZW5kcyBFcnJvclxuICBjb25zdHJ1Y3RvcjogKHsgbWVzc2FnZSB9KSAtPlxuICAgIHN1cGVyIG1lc3NhZ2VcblxuICBAbWFrZTogX21ha2UgQFxuICBAaXNUeXBlOiBUeXBlLmlzVHlwZSBAXG4gIEBpc0tpbmQ6IFR5cGUuaXNLaW5kIEBcblxuXG5jbGFzcyBJbnZhbGlkU3RhdGUgZXh0ZW5kcyBUYWxvc0Vycm9yXG4gIGNvbnN0cnVjdG9yOiAoeyBtZXNzYWdlIH0pIC0+XG4gICAgc3VwZXIgbWVzc2FnZVxuXG4gIEBtYWtlOiBfbWFrZSBAXG4gIEBpc1R5cGU6IFR5cGUuaXNUeXBlIEBcblxuY2xhc3MgTWlzc2luZ1RyYW5zaXRpb24gZXh0ZW5kcyBUYWxvc0Vycm9yXG4gIGNvbnN0cnVjdG9yOiAoeyBtZXNzYWdlIH0pIC0+XG4gICAgc3VwZXIgbWVzc2FnZVxuXG4gIEBtYWtlOiBfbWFrZSBAXG4gIEBpc1R5cGU6IFR5cGUuaXNUeXBlIEBcblxuY2xhc3MgRmFpbGVkUnVuIGV4dGVuZHMgVGFsb3NFcnJvclxuICBjb25zdHJ1Y3RvcjogKHsgZXJyb3IsIG1lc3NhZ2UgfSkgLT5cbiAgICBzdXBlciBtZXNzYWdlXG4gICAgQGVycm9yID0gZXJyb3JcblxuICBAbWFrZTogX21ha2UgQFxuICBAaXNUeXBlOiBUeXBlLmlzVHlwZSBAXG5cbmNsYXNzIEZhaWxlZE1vdmUgZXh0ZW5kcyBUYWxvc0Vycm9yXG4gIGNvbnN0cnVjdG9yOiAoeyBlcnJvciwgbWVzc2FnZSB9KSAtPlxuICAgIHN1cGVyIG1lc3NhZ2VcbiAgICBAZXJyb3IgPSBlcnJvclxuXG4gIEBtYWtlOiBfbWFrZSBAXG4gIEBpc1R5cGU6IFR5cGUuaXNUeXBlIEBcblxuXG5leHBvcnQge1xuICBUYWxvc0Vycm9yXG4gIEludmFsaWRTdGF0ZVxuICBNaXNzaW5nVHJhbnNpdGlvblxuICBGYWlsZWRSdW5cbiAgRmFpbGVkTW92ZVxufSJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=src/containers/errors.coffee