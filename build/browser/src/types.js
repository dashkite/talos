var isIteratorKind, isMachine;
import * as Type from "@dashkite/joy/type";
// Async state machines can consume sync event iterators, so long as we let async
// behavior take over downstream.
isIteratorKind = function(x) {
    return x[Symbol.asyncIterator] != null || x[Symbol.iterator] != null;
};
// TODO: Rely on errors from machine expansion for now, but this is starting to
// look like an externally useful type.
isMachine = function(x) {
    return Type.isObject(x) || Type.isArray(x);
};
export { isIteratorKind, isMachine }; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic3JjL3R5cGVzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGNBQUEsRUFBQTs7QUFBQSxPQUFPLENBQUEsUUFBUCxNQUFBLHFCQUFBOzs7O0FBSUEsY0FBQSxHQUFpQixRQUFBLENBQUUsQ0FBRixDQUFBO1NBQVMsaUNBQUEsSUFBOEI7QUFBdkMsRUFKakI7Ozs7QUFRQSxTQUFBLEdBQVksUUFBQSxDQUFFLENBQUYsQ0FBQTtTQUFTLENBQUUsSUFBSSxDQUFDLFFBQUwsQ0FBYyxDQUFkLENBQUYsQ0FBQSxJQUF1QixDQUFFLElBQUksQ0FBQyxPQUFMLENBQWEsQ0FBYixDQUFGO0FBQWhDOztBQUdaLE9BQUE7RUFDRSxjQURGO0VBRUUsU0FGRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFR5cGUgZnJvbSBcIkBkYXNoa2l0ZS9qb3kvdHlwZVwiXG5cbiMgQXN5bmMgc3RhdGUgbWFjaGluZXMgY2FuIGNvbnN1bWUgc3luYyBldmVudCBpdGVyYXRvcnMsIHNvIGxvbmcgYXMgd2UgbGV0IGFzeW5jXG4jIGJlaGF2aW9yIHRha2Ugb3ZlciBkb3duc3RyZWFtLlxuaXNJdGVyYXRvcktpbmQgPSAoIHggKSAtPiB4WyBTeW1ib2wuYXN5bmNJdGVyYXRvciBdPyB8fCB4WyBTeW1ib2wuaXRlcmF0b3IgXT9cblxuIyBUT0RPOiBSZWx5IG9uIGVycm9ycyBmcm9tIG1hY2hpbmUgZXhwYW5zaW9uIGZvciBub3csIGJ1dCB0aGlzIGlzIHN0YXJ0aW5nIHRvXG4jIGxvb2sgbGlrZSBhbiBleHRlcm5hbGx5IHVzZWZ1bCB0eXBlLlxuaXNNYWNoaW5lID0gKCB4ICkgLT4gKCBUeXBlLmlzT2JqZWN0IHggKSB8fCAoIFR5cGUuaXNBcnJheSB4IClcblxuXG5leHBvcnQge1xuICBpc0l0ZXJhdG9yS2luZFxuICBpc01hY2hpbmVcbn0iXX0=
 //# sourceURL=src/types.coffee

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy90eXBlcy5jb2ZmZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVHlwZSBmcm9tIFwiQGRhc2hraXRlL2pveS90eXBlXCJcblxuIyBBc3luYyBzdGF0ZSBtYWNoaW5lcyBjYW4gY29uc3VtZSBzeW5jIGV2ZW50IGl0ZXJhdG9ycywgc28gbG9uZyBhcyB3ZSBsZXQgYXN5bmNcbiMgYmVoYXZpb3IgdGFrZSBvdmVyIGRvd25zdHJlYW0uXG5pc0l0ZXJhdG9yS2luZCA9ICggeCApIC0+IHhbIFN5bWJvbC5hc3luY0l0ZXJhdG9yIF0/IHx8IHhbIFN5bWJvbC5pdGVyYXRvciBdP1xuXG4jIFRPRE86IFJlbHkgb24gZXJyb3JzIGZyb20gbWFjaGluZSBleHBhbnNpb24gZm9yIG5vdywgYnV0IHRoaXMgaXMgc3RhcnRpbmcgdG9cbiMgbG9vayBsaWtlIGFuIGV4dGVybmFsbHkgdXNlZnVsIHR5cGUuXG5pc01hY2hpbmUgPSAoIHggKSAtPiAoIFR5cGUuaXNPYmplY3QgeCApIHx8ICggVHlwZS5pc0FycmF5IHggKVxuXG5cbmV4cG9ydCB7XG4gIGlzSXRlcmF0b3JLaW5kXG4gIGlzTWFjaGluZVxufSJdLCJuYW1lcyI6WyJpc0l0ZXJhdG9yS2luZCIsImlzTWFjaGluZSIsIlR5cGUiLCJ4IiwiU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsIml0ZXJhdG9yIiwiaXNPYmplY3QiLCJpc0FycmF5Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFBQSxnQkFBQUM7QUFBQSxZQUFPQyxVQUFQLHFCQUFBOzs7QUFJQUYsaUJBQWlCLFNBQUVHLENBQUY7V0FBUyxBQUFBQSxDQUFBLENBQUFDLE9BQUFDLGFBQUEsQ0FBQSxJQUFBLFFBQThCRixDQUFBLENBQUFDLE9BQUFFLFFBQUEsQ0FBQSxJQUFBO0FBQXZDOzs7QUFJakJMLFlBQVksU0FBRUUsQ0FBRjtXQUFTLEFBQUVELEtBQUtLLFFBQUwsQ0FBY0osTUFBU0QsS0FBS00sT0FBTCxDQUFhTDtBQUEvQztBQUdaLFNBQ0VILGNBREYsRUFFRUMsU0FGRiJ9