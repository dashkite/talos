"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.accept = void 0;
var Type = _interopRequireWildcard(require("@dashkite/joy/type"));
var _generic = require("@dashkite/joy/generic");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var create;
exports.accept = create = (0, _generic.generic)({
  name: "create edge accept",
  default: function (...args) {
    throw new Error(`create edge accept input is malformed ${JSON.stringify(args)}`);
  }
});
(0, _generic.generic)(create, Type.isString, function (s) {
  return function (transform) {
    return transform === s;
  };
});
(0, _generic.generic)(create, Type.isSymbol, function (s) {
  return function (transform) {
    return transform === s;
  };
});
(0, _generic.generic)(create, Type.isNumber, function (n) {
  return function (transform) {
    return transform === n;
  };
});
(0, _generic.generic)(create, Type.isBoolean, function (b) {
  return function () {
    return b;
  };
});
(0, _generic.generic)(create, Type.isRegExp, function (re) {
  return function (transform) {
    return Type.isString(transform) && re.test(transform);
  };
});
(0, _generic.generic)(create, Type.isFunction, function (f) {
  return function (transform, talos) {
    return f(transform, talos);
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb250YWluZXJzL2VkZ2UvYWNjZXB0LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBLElBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUE7QUFDQSxJQUFBLFFBQUEsR0FBQSxPQUFBO0FBQUEsU0FBQSx5QkFBQSxDQUFBLDZCQUFBLE9BQUEsbUJBQUEsQ0FBQSxPQUFBLE9BQUEsSUFBQSxDQUFBLE9BQUEsT0FBQSxZQUFBLHdCQUFBLFlBQUEsQ0FBQSxDQUFBLFdBQUEsQ0FBQSxHQUFBLENBQUEsR0FBQSxDQUFBLEtBQUEsQ0FBQTtBQUFBLFNBQUEsd0JBQUEsQ0FBQSxFQUFBLENBQUEsU0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxVQUFBLFNBQUEsQ0FBQSxlQUFBLENBQUEsdUJBQUEsQ0FBQSx5QkFBQSxDQUFBLFdBQUEsT0FBQSxFQUFBLENBQUEsUUFBQSxDQUFBLEdBQUEsd0JBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsS0FBQSxTQUFBLFVBQUEsQ0FBQSxHQUFBLE1BQUEsQ0FBQSxjQUFBLElBQUEsTUFBQSxDQUFBLHdCQUFBLFdBQUEsQ0FBQSxJQUFBLENBQUEsb0JBQUEsQ0FBQSxJQUFBLE1BQUEsQ0FBQSxTQUFBLENBQUEsY0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxTQUFBLENBQUEsR0FBQSxDQUFBLEdBQUEsTUFBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsVUFBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxJQUFBLE1BQUEsQ0FBQSxjQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxPQUFBLEdBQUEsQ0FBQSxFQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEdBQUEsQ0FBQTtBQURBLElBQUEsTUFBQTtBQUlBLE9BQUEsQ0FBQSxNQUFBLEdBQUEsTUFBQSxHQUFTLElBQUEsZ0JBQUEsRUFDUDtFQUFBLElBQUEsRUFBTSxvQkFBTjtFQUNBLE9BQUEsRUFBUyxTQUFBLENBQUEsR0FBRSxJQUFGLEVBQUE7SUFDUCxNQUFNLElBQUksS0FBSixDQUFVLHlDQUF5QyxJQUFJLENBQUMsU0FBTCxDQUFlLElBQXhELENBQUEsRUFBVixDQUFBO0VBREM7QUFEVCxDQURPLENBQUE7QUFLVCxJQUFBLGdCQUFBLEVBQVEsTUFBUixFQUFnQixJQUFJLENBQUMsUUFBckIsRUFBK0IsVUFBRSxDQUFGLEVBQUE7U0FDN0IsVUFBRSxTQUFGLEVBQUE7V0FBaUIsU0FBQSxLQUFhLENBQUE7RUFBOUIsQ0FBQTtBQUQ2QixDQUEvQixDQUFBO0FBR0EsSUFBQSxnQkFBQSxFQUFRLE1BQVIsRUFBZ0IsSUFBSSxDQUFDLFFBQXJCLEVBQStCLFVBQUUsQ0FBRixFQUFBO1NBQzdCLFVBQUUsU0FBRixFQUFBO1dBQWlCLFNBQUEsS0FBYSxDQUFBO0VBQTlCLENBQUE7QUFENkIsQ0FBL0IsQ0FBQTtBQUdBLElBQUEsZ0JBQUEsRUFBUSxNQUFSLEVBQWdCLElBQUksQ0FBQyxRQUFyQixFQUErQixVQUFFLENBQUYsRUFBQTtTQUM3QixVQUFFLFNBQUYsRUFBQTtXQUFpQixTQUFBLEtBQWEsQ0FBQTtFQUE5QixDQUFBO0FBRDZCLENBQS9CLENBQUE7QUFHQSxJQUFBLGdCQUFBLEVBQVEsTUFBUixFQUFnQixJQUFJLENBQUMsU0FBckIsRUFBZ0MsVUFBRSxDQUFGLEVBQUE7U0FDOUIsWUFBQTtXQUFHLENBQUE7RUFBSCxDQUFBO0FBRDhCLENBQWhDLENBQUE7QUFHQSxJQUFBLGdCQUFBLEVBQVEsTUFBUixFQUFnQixJQUFJLENBQUMsUUFBckIsRUFBK0IsVUFBRSxFQUFGLEVBQUE7U0FDN0IsVUFBRSxTQUFGLEVBQUE7SUFDRSxPQUFFLElBQUksQ0FBQyxRQUFMLENBQWMsU0FBZCxDQUFGLElBQWlDLEVBQUUsQ0FBQyxJQUFILENBQVEsU0FBVixDQUFBO0VBRGpDLENBQUE7QUFENkIsQ0FBL0IsQ0FBQTtBQUlBLElBQUEsZ0JBQUEsRUFBUSxNQUFSLEVBQWdCLElBQUksQ0FBQyxVQUFyQixFQUFpQyxVQUFFLENBQUYsRUFBQTtTQUMvQixVQUFFLFNBQUYsRUFBYSxLQUFiLEVBQUE7V0FBd0IsQ0FBQSxDQUFFLFNBQUYsRUFBYSxLQUFiLENBQUE7RUFBeEIsQ0FBQTtBQUQrQixDQUFqQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVHlwZSBmcm9tIFwiQGRhc2hraXRlL2pveS90eXBlXCJcbmltcG9ydCB7IGdlbmVyaWMgfSBmcm9tIFwiQGRhc2hraXRlL2pveS9nZW5lcmljXCJcblxuXG5jcmVhdGUgPSBnZW5lcmljIFxuICBuYW1lOiBcImNyZWF0ZSBlZGdlIGFjY2VwdFwiXG4gIGRlZmF1bHQ6ICggYXJncy4uLiApIC0+IFxuICAgIHRocm93IG5ldyBFcnJvciBcImNyZWF0ZSBlZGdlIGFjY2VwdCBpbnB1dCBpcyBtYWxmb3JtZWQgI3tKU09OLnN0cmluZ2lmeSBhcmdzfVwiXG5cbmdlbmVyaWMgY3JlYXRlLCBUeXBlLmlzU3RyaW5nLCAoIHMgKSAtPlxuICAoIHRyYW5zZm9ybSApIC0+IHRyYW5zZm9ybSA9PSBzXG5cbmdlbmVyaWMgY3JlYXRlLCBUeXBlLmlzU3ltYm9sLCAoIHMgKSAtPlxuICAoIHRyYW5zZm9ybSApIC0+IHRyYW5zZm9ybSA9PSBzXG5cbmdlbmVyaWMgY3JlYXRlLCBUeXBlLmlzTnVtYmVyLCAoIG4gKSAtPlxuICAoIHRyYW5zZm9ybSApIC0+IHRyYW5zZm9ybSA9PSBuXG5cbmdlbmVyaWMgY3JlYXRlLCBUeXBlLmlzQm9vbGVhbiwgKCBiICkgLT5cbiAgLT4gYlxuXG5nZW5lcmljIGNyZWF0ZSwgVHlwZS5pc1JlZ0V4cCwgKCByZSApIC0+XG4gICggdHJhbnNmb3JtICkgLT4gXG4gICAgKCBUeXBlLmlzU3RyaW5nIHRyYW5zZm9ybSApICYmICggcmUudGVzdCB0cmFuc2Zvcm0gKVxuXG5nZW5lcmljIGNyZWF0ZSwgVHlwZS5pc0Z1bmN0aW9uLCAoIGYgKSAtPlxuICAoIHRyYW5zZm9ybSwgdGFsb3MgKSAtPiBmIHRyYW5zZm9ybSwgdGFsb3NcblxuXG5cbmV4cG9ydCB7IGNyZWF0ZSBhcyBhY2NlcHQgfSJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=src/containers/edge/accept.coffee