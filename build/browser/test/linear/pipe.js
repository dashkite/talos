var test;
import * as Type from "@dashkite/joy/type";
import * as Value from "@dashkite/joy/value";
import { Graph, expand, pipe } from "../../src";
import * as h from "../helpers";
test = function() {
    return h.target("linear-pipe", function() {
        var double, f, g, result, sum, triple;
        sum = function(c, x, y, z) {
            return c.result = x + y + z;
        };
        double = function(c) {
            return c.result *= 2;
        };
        triple = function(c) {
            return c.result *= 3;
        };
        f = pipe([
            sum,
            double,
            triple
        ]);
        h.assert(Type.isFunction(f), "pipe did not build a function");
        h.assert(f.length === 4, "pipe did not maintain starting arity");
        result = f(1, 2, 3);
        if (!Value.equal({
            result: 36
        }, result)) {
            console.error(result);
            throw new Error("composition failed to produce expected output");
        }
        g = pipe({
            debug: true
        }, [
            sum,
            double,
            triple
        ]);
        return h.assert(Type.isFunction(g), "pipe debug did not build a function");
    });
};
export { //g 1, 2, 3
test as pipe }; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidGVzdC9saW5lYXIvcGlwZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxPQUFPLENBQUEsUUFBUCxNQUFBOztBQUNBLE9BQU8sQ0FBQSxTQUFQLE1BQUE7O0FBQ0EsT0FBQTtFQUFTLEtBQVQ7RUFBZ0IsTUFBaEI7RUFBd0IsSUFBeEI7Q0FBQSxNQUFBOztBQUNBLE9BQU8sQ0FBQSxLQUFQLE1BQUE7O0FBRUEsSUFBQSxHQUFPLFFBQUEsQ0FBQSxDQUFBO1NBQUcsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxhQUFULEVBQXdCLFFBQUEsQ0FBQSxDQUFBO0FBQ2xDLFFBQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQTtJQUFFLEdBQUEsR0FBTSxRQUFBLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLEVBQVcsQ0FBWCxDQUFBO2FBQWtCLENBQUMsQ0FBQyxNQUFGLEdBQVcsQ0FBQSxHQUFJLENBQUosR0FBUTtJQUFyQztJQUNOLE1BQUEsR0FBUyxRQUFBLENBQUUsQ0FBRixDQUFBO2FBQVMsQ0FBQyxDQUFDLE1BQUYsSUFBWTtJQUFyQjtJQUNULE1BQUEsR0FBUyxRQUFBLENBQUUsQ0FBRixDQUFBO2FBQVMsQ0FBQyxDQUFDLE1BQUYsSUFBWTtJQUFyQjtJQUVULENBQUEsR0FBSSxJQUFBLENBQUssQ0FDUCxHQURPLEVBRVAsTUFGTyxFQUdQLE1BSE8sQ0FBTDtJQU1KLENBQUMsQ0FBQyxNQUFGLENBQVcsSUFBSSxDQUFDLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBWCxFQUFnQywrQkFBaEM7SUFDQSxDQUFDLENBQUMsTUFBRixDQUFXLENBQUMsQ0FBQyxNQUFGLEtBQVksQ0FBdkIsRUFBNEIsc0NBQTVCO0lBRUEsTUFBQSxHQUFTLENBQUEsQ0FBRSxDQUFGLEVBQUssQ0FBTCxFQUFRLENBQVI7SUFDVCxJQUFHLENBQUUsS0FBSyxDQUFDLEtBQU4sQ0FBWTtNQUFFLE1BQUEsRUFBUTtJQUFWLENBQVosRUFBNEIsTUFBNUIsQ0FBTDtNQUNFLE9BQU8sQ0FBQyxLQUFSLENBQWMsTUFBZDtNQUNBLE1BQU0sSUFBSSxLQUFKLENBQVUsK0NBQVYsRUFGUjs7SUFLQSxDQUFBLEdBQUksSUFBQSxDQUFLO01BQUEsS0FBQSxFQUFPO0lBQVAsQ0FBTCxFQUFrQixDQUNwQixHQURvQixFQUVwQixNQUZvQixFQUdwQixNQUhvQixDQUFsQjtXQU1KLENBQUMsQ0FBQyxNQUFGLENBQVcsSUFBSSxDQUFDLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBWCxFQUFnQyxxQ0FBaEM7RUExQmdDLENBQXhCO0FBQUg7O0FBOEJQLE9BQUE7O0VBQVMsSUFBQSxRQUFUIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVHlwZSBmcm9tIFwiQGRhc2hraXRlL2pveS90eXBlXCJcbmltcG9ydCAqIGFzIFZhbHVlIGZyb20gXCJAZGFzaGtpdGUvam95L3ZhbHVlXCJcbmltcG9ydCB7IEdyYXBoLCBleHBhbmQsIHBpcGUgfSBmcm9tIFwiLi4vLi4vc3JjXCJcbmltcG9ydCAqIGFzIGggZnJvbSBcIi4uL2hlbHBlcnNcIlxuXG50ZXN0ID0gLT4gaC50YXJnZXQgXCJsaW5lYXItcGlwZVwiLCAtPlxuICBzdW0gPSAoIGMsIHgsIHksIHogKSAtPiBjLnJlc3VsdCA9IHggKyB5ICsgeiBcbiAgZG91YmxlID0gKCBjICkgLT4gYy5yZXN1bHQgKj0gMlxuICB0cmlwbGUgPSAoIGMgKSAtPiBjLnJlc3VsdCAqPSAzXG5cbiAgZiA9IHBpcGUgW1xuICAgIHN1bVxuICAgIGRvdWJsZVxuICAgIHRyaXBsZVxuICBdXG5cbiAgaC5hc3NlcnQgKCBUeXBlLmlzRnVuY3Rpb24gZiApLCBcInBpcGUgZGlkIG5vdCBidWlsZCBhIGZ1bmN0aW9uXCJcbiAgaC5hc3NlcnQgKCBmLmxlbmd0aCA9PSA0ICksIFwicGlwZSBkaWQgbm90IG1haW50YWluIHN0YXJ0aW5nIGFyaXR5XCJcbiAgXG4gIHJlc3VsdCA9IGYgMSwgMiwgM1xuICBpZiAhIFZhbHVlLmVxdWFsIHsgcmVzdWx0OiAzNiB9LCByZXN1bHRcbiAgICBjb25zb2xlLmVycm9yIHJlc3VsdFxuICAgIHRocm93IG5ldyBFcnJvciBcImNvbXBvc2l0aW9uIGZhaWxlZCB0byBwcm9kdWNlIGV4cGVjdGVkIG91dHB1dFwiXG5cblxuICBnID0gcGlwZSBkZWJ1ZzogdHJ1ZSwgW1xuICAgIHN1bVxuICAgIGRvdWJsZVxuICAgIHRyaXBsZVxuICBdXG5cbiAgaC5hc3NlcnQgKCBUeXBlLmlzRnVuY3Rpb24gZyApLCBcInBpcGUgZGVidWcgZGlkIG5vdCBidWlsZCBhIGZ1bmN0aW9uXCJcbiAgI2cgMSwgMiwgM1xuXG5cbmV4cG9ydCB7IHRlc3QgYXMgcGlwZSB9Il19
 //# sourceURL=test/linear/pipe.coffee

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbGluZWFyL3BpcGUuY29mZmVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFR5cGUgZnJvbSBcIkBkYXNoa2l0ZS9qb3kvdHlwZVwiXG5pbXBvcnQgKiBhcyBWYWx1ZSBmcm9tIFwiQGRhc2hraXRlL2pveS92YWx1ZVwiXG5pbXBvcnQgeyBHcmFwaCwgZXhwYW5kLCBwaXBlIH0gZnJvbSBcIi4uLy4uL3NyY1wiXG5pbXBvcnQgKiBhcyBoIGZyb20gXCIuLi9oZWxwZXJzXCJcblxudGVzdCA9IC0+IGgudGFyZ2V0IFwibGluZWFyLXBpcGVcIiwgLT5cbiAgc3VtID0gKCBjLCB4LCB5LCB6ICkgLT4gYy5yZXN1bHQgPSB4ICsgeSArIHogXG4gIGRvdWJsZSA9ICggYyApIC0+IGMucmVzdWx0ICo9IDJcbiAgdHJpcGxlID0gKCBjICkgLT4gYy5yZXN1bHQgKj0gM1xuXG4gIGYgPSBwaXBlIFtcbiAgICBzdW1cbiAgICBkb3VibGVcbiAgICB0cmlwbGVcbiAgXVxuXG4gIGguYXNzZXJ0ICggVHlwZS5pc0Z1bmN0aW9uIGYgKSwgXCJwaXBlIGRpZCBub3QgYnVpbGQgYSBmdW5jdGlvblwiXG4gIGguYXNzZXJ0ICggZi5sZW5ndGggPT0gNCApLCBcInBpcGUgZGlkIG5vdCBtYWludGFpbiBzdGFydGluZyBhcml0eVwiXG4gIFxuICByZXN1bHQgPSBmIDEsIDIsIDNcbiAgaWYgISBWYWx1ZS5lcXVhbCB7IHJlc3VsdDogMzYgfSwgcmVzdWx0XG4gICAgY29uc29sZS5lcnJvciByZXN1bHRcbiAgICB0aHJvdyBuZXcgRXJyb3IgXCJjb21wb3NpdGlvbiBmYWlsZWQgdG8gcHJvZHVjZSBleHBlY3RlZCBvdXRwdXRcIlxuXG5cbiAgZyA9IHBpcGUgZGVidWc6IHRydWUsIFtcbiAgICBzdW1cbiAgICBkb3VibGVcbiAgICB0cmlwbGVcbiAgXVxuXG4gIGguYXNzZXJ0ICggVHlwZS5pc0Z1bmN0aW9uIGcgKSwgXCJwaXBlIGRlYnVnIGRpZCBub3QgYnVpbGQgYSBmdW5jdGlvblwiXG4gICNnIDEsIDIsIDNcblxuXG5leHBvcnQgeyB0ZXN0IGFzIHBpcGUgfSJdLCJuYW1lcyI6WyJ0ZXN0IiwiVHlwZSIsIlZhbHVlIiwiR3JhcGgiLCJleHBhbmQiLCJwaXBlIiwiaCIsInRhcmdldCIsImRvdWJsZSIsImYiLCJnIiwicmVzdWx0Iiwic3VtIiwidHJpcGxlIiwiYyIsIngiLCJ5IiwieiIsImFzc2VydCIsImlzRnVuY3Rpb24iLCJsZW5ndGgiLCJlcXVhbCIsImNvbnNvbGUiLCJlcnJvciIsIkVycm9yIiwiZGVidWciXSwibWFwcGluZ3MiOiJBQUFBLElBQUFBO0FBQUEsWUFBT0MsVUFBUCxxQkFBQTtBQUNBLFlBQU9DLFdBQVAsc0JBQUE7QUFDQSxTQUFTQyxLQUFULEVBQWdCQyxNQUFoQixFQUF3QkMsSUFBeEIsUUFBQSxZQUFBO0FBQ0EsWUFBT0MsT0FBUCxhQUFBO0FBRUFOLE9BQU87V0FBR00sRUFBRUMsTUFBRixDQUFTLGVBQWU7UUFDbEMsSUFBQUMsUUFBQUMsR0FBQUMsR0FBQUMsUUFBQUMsS0FBQUM7UUFBRUQsTUFBTSxTQUFFRSxDQUFGLEVBQUtDLENBQUwsRUFBUUMsQ0FBUixFQUFXQyxDQUFYO21CQUFrQkgsRUFBRUgsTUFBRixHQUFXSSxJQUFJQyxJQUFJQztRQUFyQztRQUNOVCxTQUFTLFNBQUVNLENBQUY7bUJBQVNBLEVBQUVILE1BQUYsSUFBWTtRQUFyQjtRQUNURSxTQUFTLFNBQUVDLENBQUY7bUJBQVNBLEVBQUVILE1BQUYsSUFBWTtRQUFyQjtRQUVURixJQUFJSixLQUFLO1lBQ1BPO1lBQ0FKO1lBQ0FLO1NBSEU7UUFNSlAsRUFBRVksTUFBRixDQUFXakIsS0FBS2tCLFVBQUwsQ0FBZ0JWLElBQUs7UUFDaENILEVBQUVZLE1BQUYsQ0FBV1QsRUFBRVcsTUFBRixLQUFZLEdBQUs7UUFFNUJULFNBQVNGLEVBQUUsR0FBRyxHQUFHO1FBQ2pCLElBQUcsQ0FBRVAsTUFBTW1CLEtBQU4sQ0FBWTtZQUFFVixRQUFRO1FBQVYsR0FBZ0JBLFNBQWpDO1lBQ0VXLFFBQVFDLEtBQVIsQ0FBY1o7WUFDZCxNQUFNLElBQUlhLE1BQU07O1FBR2xCZCxJQUFJTCxLQUFLO1lBQUFvQixPQUFPO1FBQVAsR0FBYTtZQUNwQmI7WUFDQUo7WUFDQUs7U0FIRTtlQU1KUCxFQUFFWSxNQUFGLENBQVdqQixLQUFLa0IsVUFBTCxDQUFnQlQsSUFBSztJQTFCQTtBQUEzQjtBQThCUDtBQUFTVixRQUFBSyxJQUFUIn0=