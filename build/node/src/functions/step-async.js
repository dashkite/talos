"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stepAsync = void 0;
var Type = _interopRequireWildcard(require("@dashkite/joy/type"));
var _predicate = require("@dashkite/joy/predicate");
var _generic = require("@dashkite/joy/generic");
var _index = require("../containers/index.js");
var Errors = _interopRequireWildcard(require("../containers/errors.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var _step, matchEdge, matchVertex, move, run, step;
matchVertex = function (graph, talos) {
  var vertex;
  vertex = graph.get(talos);
  if (vertex == null) {
    talos.throw(Errors.InvalidState.create(`talos state ${talos.state} is not in graph`));
  }
  return vertex;
};
matchEdge = async function (vertex, talos, transform) {
  var edge, i, len, ref;
  ref = vertex.edges;
  for (i = 0, len = ref.length; i < len; i++) {
    edge = ref[i];
    if ((await edge.accept(transform, talos)) === true) {
      return edge;
    }
  }
  return talos.throw(Errors.MissingTransition.create(`no edge matches transform ${transform}`));
};
run = async function (talos, edge) {
  var error;
  if (edge.run != null) {
    try {
      return await edge.run(talos);
    } catch (error1) {
      error = error1;
      return talos.throw(Errors.FailedRun.create(error, "encountered an error while running edge function"));
    }
  }
};
move = async function (talos, edge) {
  var error;
  try {
    return await edge.move(talos);
  } catch (error1) {
    error = error1;
    return talos.throw(Errors.FailedMove.create(error, "encountered an error while moving states"));
  }
};
exports.stepAsync = step = (0, _generic.generic)({
  name: "step talos",
  default: function (...args) {
    throw new Error(`step: input is malformed ${JSON.stringify(args)}`);
  }
});
(0, _generic.generic)(step, _index.Graph.isType, _index.Talos.isType, Type.isAny, function (graph, talos, transform) {
  return _step(graph, talos, transform);
});
(0, _generic.generic)(step, _index.Graph.isType, (0, _predicate.negate)(_index.Talos.isType), function (graph, transform) {
  return step(graph, _index.Talos.create(), transform);
});
_step = async function (graph, talos, transform) {
  var edge, vertex;
  vertex = matchVertex(graph, talos);
  if (talos.halted) {
    return talos;
  }
  edge = await matchEdge(vertex, talos, transform);
  if (talos.halted) {
    return talos;
  }
  await run(talos, edge);
  if (talos.halted) {
    return talos;
  }
  await move(talos, edge);
  return talos;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mdW5jdGlvbnMvc3RlcC1hc3luYy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQSxJQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBO0FBQ0EsSUFBQSxVQUFBLEdBQUEsT0FBQTtBQUNBLElBQUEsUUFBQSxHQUFBLE9BQUE7QUFBQSxJQUFBLE1BQUEsR0FBQSxPQUFBO0FBQUEsSUFBQSxNQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBO0FBQUEsU0FBQSx5QkFBQSxDQUFBLDZCQUFBLE9BQUEsbUJBQUEsQ0FBQSxPQUFBLE9BQUEsSUFBQSxDQUFBLE9BQUEsT0FBQSxZQUFBLHdCQUFBLFlBQUEsQ0FBQSxDQUFBLFdBQUEsQ0FBQSxHQUFBLENBQUEsR0FBQSxDQUFBLEtBQUEsQ0FBQTtBQUFBLFNBQUEsd0JBQUEsQ0FBQSxFQUFBLENBQUEsU0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxVQUFBLFNBQUEsQ0FBQSxlQUFBLENBQUEsdUJBQUEsQ0FBQSx5QkFBQSxDQUFBLFdBQUEsT0FBQSxFQUFBLENBQUEsUUFBQSxDQUFBLEdBQUEsd0JBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsS0FBQSxTQUFBLFVBQUEsQ0FBQSxHQUFBLE1BQUEsQ0FBQSxjQUFBLElBQUEsTUFBQSxDQUFBLHdCQUFBLFdBQUEsQ0FBQSxJQUFBLENBQUEsb0JBQUEsQ0FBQSxJQUFBLE1BQUEsQ0FBQSxTQUFBLENBQUEsY0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxTQUFBLENBQUEsR0FBQSxDQUFBLEdBQUEsTUFBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsVUFBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxJQUFBLE1BQUEsQ0FBQSxjQUFB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LEtBQUEsQ0FBTSxLQUFOLEVBQWEsS0FBYixFQUFvQixTQUFwQixDQUFBO0FBRG9ELENBQXRELENBQUE7QUFHQSxJQUFBLGdCQUFBLEVBQVEsSUFBUixFQUFjLFlBQUssQ0FBQyxNQUFwQixFQUE4QixJQUFBLGlCQUFBLEVBQU8sWUFBSyxDQUFDLE1BQWIsQ0FBOUIsRUFBcUQsVUFBRSxLQUFGLEVBQVMsU0FBVCxFQUFBO1NBQ25ELElBQUEsQ0FBSyxLQUFMLEVBQVksWUFBSyxDQUFDLE1BQU4sQ0FBQSxDQUFaLEVBQTRCLFNBQTVCLENBQUE7QUFEbUQsQ0FBckQsQ0FBQTtBQUlBLEtBQUEsR0FBUSxlQUFBLENBQUUsS0FBRixFQUFTLEtBQVQsRUFBZ0IsU0FBaEIsRUFBQTtFQUNSLElBQUEsSUFBQSxFQUFBLE1BQUE7RUFBRSxNQUFBLEdBQVMsV0FBQSxDQUFZLEtBQVosRUFBbUIsS0FBbkIsQ0FBQTtFQUNULElBQWdCLEtBQUssQ0FBQyxNQUF0QixFQUFBO0lBQUEsT0FBTyxLQUFQOztFQUVBLElBQUEsR0FBTyxNQUFNLFNBQUEsQ0FBVSxNQUFWLEVBQWtCLEtBQWxCLEVBQXlCLFNBQS9CLENBQUE7RUFDUCxJQUFnQixLQUFLLENBQUMsTUFBdEIsRUFBQTtJQUFBLE9BQU8sS0FBUDs7RUFFQSxNQUFNLEdBQUEsQ0FBSSxLQUFKLEVBQVcsSUFBWCxDQUFBO0VBQ04sSUFBZ0IsS0FBSyxDQUFDLE1BQXRCLEVBQUE7SUFBQSxPQUFPLEtBQVA7O0VBRUEsTUFBTSxJQUFBLENBQUssS0FBTCxFQUFZLElBQVosQ0FBQTtTQUNOLEtBQUE7QUFYTSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVHlwZSBmcm9tIFwiQGRhc2hraXRlL2pveS90eXBlXCJcbmltcG9ydCB7IG5lZ2F0ZSB9IGZyb20gXCJAZGFzaGtpdGUvam95L3ByZWRpY2F0ZVwiXG5pbXBvcnQgeyBnZW5lcmljIH0gZnJvbSBcIkBkYXNoa2l0ZS9qb3kvZ2VuZXJpY1wiXG5pbXBvcnQgeyBHcmFwaCwgVGFsb3MgfSBmcm9tIFwiLi4vY29udGFpbmVyc1wiXG5pbXBvcnQgKiBhcyBFcnJvcnMgZnJvbSBcIi4uL2NvbnRhaW5lcnMvZXJyb3JzXCJcblxuXG5tYXRjaFZlcnRleCA9ICggZ3JhcGgsIHRhbG9zICkgLT5cbiAgdmVydGV4ID0gZ3JhcGguZ2V0IHRhbG9zXG4gIGlmICF2ZXJ0ZXg/XG4gICAgdGFsb3MudGhyb3cgRXJyb3JzLkludmFsaWRTdGF0ZS5jcmVhdGUgXCJ0YWxvcyBzdGF0ZSAjeyB0YWxvcy5zdGF0ZSB9IGlzIG5vdFxuICAgICAgaW4gZ3JhcGhcIlxuICB2ZXJ0ZXhcblxubWF0Y2hFZGdlID0gKCB2ZXJ0ZXgsIHRhbG9zLCB0cmFuc2Zvcm0gKSAtPlxuICBmb3IgZWRnZSBpbiB2ZXJ0ZXguZWRnZXNcbiAgICBpZiAoIGF3YWl0IGVkZ2UuYWNjZXB0IHRyYW5zZm9ybSwgdGFsb3MgKSA9PSB0cnVlXG4gICAgICByZXR1cm4gZWRnZVxuICB0YWxvcy50aHJvdyBFcnJvcnMuTWlzc2luZ1RyYW5zaXRpb24uY3JlYXRlIFwibm8gZWRnZSBtYXRjaGVzIHRyYW5zZm9ybSBcbiAgICAjeyB0cmFuc2Zvcm0gfVwiXG5cbnJ1biA9ICggdGFsb3MsIGVkZ2UgKSAtPlxuICBpZiBlZGdlLnJ1bj9cbiAgICB0cnlcbiAgICAgIGF3YWl0IGVkZ2UucnVuIHRhbG9zXG4gICAgY2F0Y2ggZXJyb3JcbiAgICAgIHRhbG9zLnRocm93IEVycm9ycy5GYWlsZWRSdW4uY3JlYXRlIGVycm9yLCBcbiAgICAgICAgXCJlbmNvdW50ZXJlZCBhbiBlcnJvciB3aGlsZSBydW5uaW5nIGVkZ2UgZnVuY3Rpb25cIlxuXG5tb3ZlID0gKCB0YWxvcywgZWRnZSApIC0+XG4gIHRyeVxuICAgIGF3YWl0IGVkZ2UubW92ZSB0YWxvc1xuICBjYXRjaCBlcnJvclxuICAgIHRhbG9zLnRocm93IEVycm9ycy5GYWlsZWRNb3ZlLmNyZWF0ZSBlcnJvciwgXG4gICAgICBcImVuY291bnRlcmVkIGFuIGVycm9yIHdoaWxlIG1vdmluZyBzdGF0ZXNcIlxuXG5cbnN0ZXAgPSBnZW5lcmljIFxuICBuYW1lOiBcInN0ZXAgdGFsb3NcIlxuICBkZWZhdWx0OiAoIGFyZ3MuLi4gKSAtPiBcbiAgICB0aHJvdyBuZXcgRXJyb3IgXCJzdGVwOiBpbnB1dCBpcyBtYWxmb3JtZWQgI3tKU09OLnN0cmluZ2lmeSBhcmdzfVwiXG5cbmdlbmVyaWMgc3RlcCwgR3JhcGguaXNUeXBlLCBUYWxvcy5pc1R5cGUsIFR5cGUuaXNBbnksICggZ3JhcGgsIHRhbG9zLCB0cmFuc2Zvcm0gKSAtPlxuICBfc3RlcCBncmFwaCwgdGFsb3MsIHRyYW5zZm9ybVxuXG5nZW5lcmljIHN0ZXAsIEdyYXBoLmlzVHlwZSwgKCBuZWdhdGUgVGFsb3MuaXNUeXBlICksICggZ3JhcGgsIHRyYW5zZm9ybSApIC0+XG4gIHN0ZXAgZ3JhcGgsIFRhbG9zLmNyZWF0ZSgpLCB0cmFuc2Zvcm1cblxuXG5fc3RlcCA9ICggZ3JhcGgsIHRhbG9zLCB0cmFuc2Zvcm0gKSAtPlxuICB2ZXJ0ZXggPSBtYXRjaFZlcnRleCBncmFwaCwgdGFsb3NcbiAgcmV0dXJuIHRhbG9zIGlmIHRhbG9zLmhhbHRlZFxuXG4gIGVkZ2UgPSBhd2FpdCBtYXRjaEVkZ2UgdmVydGV4LCB0YWxvcywgdHJhbnNmb3JtXG4gIHJldHVybiB0YWxvcyBpZiB0YWxvcy5oYWx0ZWRcblxuICBhd2FpdCBydW4gdGFsb3MsIGVkZ2VcbiAgcmV0dXJuIHRhbG9zIGlmIHRhbG9zLmhhbHRlZFxuXG4gIGF3YWl0IG1vdmUgdGFsb3MsIGVkZ2VcbiAgdGFsb3NcblxuXG5leHBvcnQge1xuICBzdGVwIGFzIHN0ZXBBc3luY1xufSJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=src/functions/step-async.coffee